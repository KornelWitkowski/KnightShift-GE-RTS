<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<title> commandobject object </title>
</head>

<body>

<hr>

<p><big><strong>commandobject</strong> object</big></p>

<p><big>Functions</big></p>
<pre>
<functions_begin>
void ChangedCommandValue() private
<functions_end>
</pre>

<p><big>Commands</big></p>
<pre>
<commands_begin>
int __NULL__() public
int Initialize() public
int Uninitialize() public
int Stop() public
int Land() public
int Move(int, int, int) public
int MoveEx(int, int, int) public
int MoveAndDefend(int, int, int) public
int Turn(int) public
int TurnDelayed(int) public
int Attack(unit) public
int AttackOnPoint(int, int, int) public
int Enter(unit, int) public
int SleepMode(int) public
int CamouflageMode(int) public
int RecycleUnit() public
int SetLights(int) public
int SetAttackMode(int) public
int SetMovementMode(int) public
int SetTakeEquipmentArtefactMode(int) public
int SetSmartAttackMode(int) public
int DropEquipment(int) public
int MakeCustomAnimation(int, int, int, int, int, int) public
int StopCustomAnimation() public
int MakeChatTalk(unit) public
int SetTalkMode(int, int, int) public
int PutHoldTrap(int, int, int, int) public
int PutHoldTrapOnce(int, int, int, int) public
int GetHoldTrap(int, int, int) public
int SetUpHoldTrap(int, int, int) public
int StartStrongFight() public
int SetRPGSkillsLevel(int, int, int, int) public
int UseObjectFromRPGInventory(int) public
int DropObjectFromRPGInventory(int, int) public
int DropEquipmentToRPGInventory(int) public
int SoldInventoryInShop(unit, int, int) public
int SoldEquipmentInShop(unit, int) public
int BuyInventoryFromShop(unit, int, int) public
int HireRPGUnit(unit) public
int RegenerateHPFromInventory() public
int RegenerateMagicFromInventory() public
int UseNextRPGWeapon() public
int SetAutoSelectRPGWeaponMode(int) public
int MoveToShopUnit(unit) public
int MoveToUnitToHire(unit) public
int MakeMagicImmortalShield() public
int MakeMagicFreeze() public
int MakeMagicCapturing(unit) public
int MakeMagicStorm(int, int, int) public
int MakeMagicSeeing(int, int, int) public
int MakeMagicConversion(unit) public
int MakeMagicFireRain(int, int, int) public
int MakeMagicRemoveStormFireRain(int, int, int) public
int MakeMagicTeleportation(int, int, int) public
int MakeMagicGhost(int, int, int) public
int MakeMagicWildAnimal(int, int, int) public
int MakeMagicTrap(int, int, int) public
int MakeMagicGetHP(unit) public
int MakeMagicSingleFreeze(unit) public
int MakeMagicBlindAttack(unit) public
int MakeMagicTimedCapturing(unit) public
int MakeMagicOurWildAnimal() public
int MakeMagicOurHoldWildAnimal(int, int, int) public
int MakeMagicOurMagicMirror() public
int MakeMagicRandConversion(unit) public
int MakeMagicAroundDamage() public
int MakeMagicSelfHealing() public
int MakeMagicFireWall(int, int, int, int) public
int SetMakeMagicImmortalShieldMode(int) public
int SetMakeMagicFreezeMode(int) public
int SetMakeMagicCapturingMode(int) public
int SetMakeMagicStormMode(int) public
int SetMakeMagicSeeingMode(int) public
int SetMakeMagicConversionMode(int) public
int SetMakeMagicFireRainMode(int) public
int SetMakeMagicRemoveStormFireRainMode(int) public
int SetMakeMagicTeleportationMode(int) public
int SetMakeMagicMagicGhostMode(int) public
int SetMakeMagicWildAnimalMode(int) public
int SetMakeMagicTrapMode(int) public
int SetMakeMagicGetHPMode(int) public
int SetMakeMagicSingleFreezeMode(int) public
int SetMakeMagicBlindAttackMode(int) public
int SetMakeMagicTimedCapturingMode(int) public
int SetMakeMagicOurWildAnimalMode(int) public
int SetMakeMagicOurHoldWildAnimalMode(int) public
int SetMakeMagicOurMagicMirrorMode(int) public
int SetMakeMagicRandConversionMode(int) public
int SetMakeMagicAroundDamageMode(int) public
int SetMakeMagicSelfHealing(int) public
int SetMakeMagicFireWallMode(int) public
int Repair(unit) public
int Convert(unit) public
int CaptureBuilding(unit) public
int SetRepairMode(int) public
int SetConvertMode(int) public
int SetCaptureBuildingMode(int) public
int BuildObject(unit) public
int SetHarvestPoint(int, int, int) public
int SetHarvestDestination(unit) public
int InitHarvestDestination(unit) public
int MoveToDestination() public
int MoveToHarvestPoint() public
int SetHarvestMode(int) public
int DisposePlatoon() public
int AddUnitToPlatoon(punit) public
int RemoveUnitFromPlatoon(punit) public
int MoveAndDefendInGroup(int, int, int) public
int UserNoParam0() public
int UserNoParam1() public
int UserNoParam2() public
int UserNoParam3() public
int UserNoParam4() public
int UserNoParam5() public
int UserNoParam6() public
int UserNoParam7() public
int UserNoParam8() public
int UserNoParam9() public
int UserOneParam0(int) public
int UserOneParam1(int) public
int UserOneParam2(int) public
int UserOneParam3(int) public
int UserOneParam4(int) public
int UserOneParam5(int) public
int UserOneParam6(int) public
int UserOneParam7(int) public
int UserOneParam8(int) public
int UserOneParam9(int) public
int UserObject0(unit) public
int UserObject1(unit) public
int UserObject2(unit) public
int UserObject3(unit) public
int UserObject4(unit) public
int UserObject5(unit) public
int UserObject6(unit) public
int UserObject7(unit) public
int UserObject8(unit) public
int UserObject9(unit) public
int UserPoint0(int, int, int) public
int UserPoint1(int, int, int) public
int UserPoint2(int, int, int) public
int UserPoint3(int, int, int) public
int UserPoint4(int, int, int) public
int UserPoint5(int, int, int) public
int UserPoint6(int, int, int) public
int UserPoint7(int, int, int) public
int UserPoint8(int, int, int) public
int UserPoint9(int, int, int) public
int UserLine0(int, int, int, int, int, int) public
int UserLine1(int, int, int, int, int, int) public
int UserLine2(int, int, int, int, int, int) public
int UserLine3(int, int, int, int, int, int) public
int UserLine4(int, int, int, int, int, int) public
int UserLine5(int, int, int, int, int, int) public
int UserLine6(int, int, int, int, int, int) public
int UserLine7(int, int, int, int, int, int) public
int UserLine8(int, int, int, int, int, int) public
int UserLine9(int, int, int, int, int, int) public
int UserDoubleLine0(int, int, int, int, int, int) public
int UserDoubleLine1(int, int, int, int, int, int) public
int UserDoubleLine2(int, int, int, int, int, int) public
int UserDoubleLine3(int, int, int, int, int, int) public
int UserDoubleLine4(int, int, int, int, int, int) public
int UserDoubleLine5(int, int, int, int, int, int) public
int UserDoubleLine6(int, int, int, int, int, int) public
int UserDoubleLine7(int, int, int, int, int, int) public
int UserDoubleLine8(int, int, int, int, int, int) public
int UserDoubleLine9(int, int, int, int, int, int) public
int UserArea0(int, int, int, int, int, int) public
int UserArea1(int, int, int, int, int, int) public
int UserArea2(int, int, int, int, int, int) public
int UserArea3(int, int, int, int, int, int) public
int UserArea4(int, int, int, int, int, int) public
int UserArea5(int, int, int, int, int, int) public
int UserArea6(int, int, int, int, int, int) public
int UserArea7(int, int, int, int, int, int) public
int UserArea8(int, int, int, int, int, int) public
int UserArea9(int, int, int, int, int, int) public
int MoveToDepot(unit) public
int MoveInventoryToDepot(unit, int, int) public
int MoveEquipmentToDepot(unit, int) public
int MoveDepotToInventory(unit, int, int) public
int SpecialNextAngle() public
int SpecialPrevAngle() public
int SpecialShowSkillsDialog() public
int SpecialShowInventoryDialog() public
int SpecialSetLastMagicCommand() public
int SpecialSetMoveFormationMode(int) public
<commands_end>
</pre>

<p><big>Events</big></p>
<pre>
<events_begin>
<events_end>
</pre>

<p><big>Enums</big></p>
<pre>
<enums_begin>
findTargetFlyingUnit
findTargetUnit
findTargetArmedAnimal
findTargetUnarmedAnimal
findTargetBuilding
findTargetAnyUnit
findTargetWall
findTargetBuildingRuin
findTargetRepairablePassive
findTargetDamagableOnly
findEnemyUnit
findAllyUnit
findNeutralUnit
findOurUnit
findNearestUnit
findWeakestUnit
findStrongestUnit
findSickestUnit
findBestDamageUnit
sortModeHP
sortModeReversedHP
sortModeDamage
sortModeReversedDamage
sortModeHitsToKill
sortModeReversedHitsToKill
sortModeHitsToKillFirstFlyable
notInRange
inRangeTooClose
inRangeBadAngleAlpha
inRangeBadAngleBeta
inRangeBadHit
inRangeFlyUp
inRangeGoodHit
cannonTypeNone
cannonTypeSword
cannonTypeInvisible
cannonTypeCannon
cannonTypeDropBomb
cannonTypeBomb
cannonTypeElectric
<enums_end>
</pre>

</body>
</html>