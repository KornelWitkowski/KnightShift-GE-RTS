function void InitializePlayerAdventureGE4()
{
    player rPlayer;
    int i;

    for(i=0; i<8; i=i+1)
    {
        rPlayer = GetPlayer(i);
        
        if(rPlayer.IsHuman()) 
        {   
            uHero1 = rPlayer.CreateUnit(GetPointX(0), GetPointY(0), 1, 128, "HUNTER");
            uHero1.SetUnitName("translateAdventureGE04_Hunter");

            uHero1.AddHP(100);
            ImproveHPRegeneration(uHero1, 5);

            rPlayer.SetMaxMoney(0);

            rPlayer.RegisterGoal(0, "translateAdventureGE04_HunterMustSurvive");
            rPlayer.RegisterGoal(1, "translateAdventureGE04_FindWayOut");

            rPlayer.EnableGoal(0, true, true);
            rPlayer.EnableGoal(1, true, true);
            
            rPlayer.LookAt(rPlayer.GetStartingPointX(), rPlayer.GetStartingPointY(), 6, 32, 20, 1);
        }
        else
        {
            // Tutaj wyłączamy statystyki dla graczy AI, dzięki czemu nie będą widoczni na ekranie końcowym
            rPlayer.EnableStatistics(false);
            // Wyłączmy informacje na początku, że "Chwalibóg jest twoim wrogiem"
            rPlayer.EnableAIFeatures(aiChooseEnemy, false);
        }
    }

    SetInterfaceOptions(
        lockAllianceDialog |
        lockGiveMoneyDialog |
        lockGiveUnitsDialog |
        lockToolbarSwitchMode |
        lockToolbarAlliance |
        lockToolbarGiveMoney |
        lockToolbarMoney |
        lockDisplayToolbarMoney |
        lockToolbarLevelName |
        lockToolbarHelpMode |
        lockDisplayToolbarLevelName |
        lockCreateBuildPanel |
        0);
}

state InitializeAdventureGE4
{

    AddWorldMapSign(GetPointX(1), GetPointY(1), 0, 0, -1);

    SetTimer(1, 400);
    SetTimer(2, 2400);//2min
    SetTimer(3, 4800);//4min
    SetTimer(4, 1200);//1min

    SetTimer(7, GetWindTimerTicks());
    StartWind();

    StatisticReset();
    StatisticAddTab("translateStatisticsTabSummary", statisticTabTypeSummary, true);
    StatisticAddTab("translateStatisticsTabMoney", statisticTabTypeMoney, true);
    StatisticAddTab("translateStatisticsTabUnitsStat", statisticTabTypeUnits, true);
    StatisticSetSortOrder(0, 3, true);

    return Nothing;
}


function void CheckUnitDestroyedAdventureGE4(unitex uUnit)
{
    int i;
    player rPlayer;

    if(uUnit == uHero1)
    {
        for(i=0; i<8; i=i+1)
        {
            rPlayer = GetPlayer(i);
            
            if(rPlayer.IsHuman())
            {   
                SetGoalState(0, goalFailed, 1);

                rPlayer.SetScriptData(PLAYER_STATUS, STATUS_DEFEAT);

                SetStateDelay(150);
                state Defeat;
            }
        }
    }

    if(uUnit.GetLocationX()==GetPointX(1) && uUnit.GetLocationY()==GetPointY(1))
    {
        SetGoalState(0, goalAchieved, 1);
        SetGoalState(1, goalAchieved, 1);
        SetStateDelay(150);
        state Victory;
    }
}
