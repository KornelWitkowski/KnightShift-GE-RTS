function int ChooseDemonTier(int nWaveNumber)
{
    int iRoll, iDifficultyModifier;

    iDifficultyModifier = (iDifficulty - 2) * 5;

    iRoll =  GaussianDistribution(40) + 8 * nWaveNumber / 5;
    iRoll = iRoll + iDifficultyModifier;

    if (35 > iRoll) return 0;
    if (60 > iRoll) return 1;
    if (85 > iRoll) return 2;
    if (110 > iRoll) return 3;
    if (135 > iRoll) return 4;
    return 5;
}

function void SpawnDemon(int iWaveNumber, int iMarker)
{
    int iTier, iRand;
    player rPlayerEnemy;
    unitex uUnit;

    iRand = RandXor(3);

    rPlayerEnemy = GetPlayer(11);

    iTier = ChooseDemonTier(iWaveNumber);

    if(iTier == 0)
    {
        if(iRand < 2)
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER1");
        else
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER1S");
    } 
    else if (iTier == 1)
    {
        if(iRand < 2)
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER2");
        else
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER2S");
    } 
    else if (iTier == 2)
    {
        if(iRand < 2)
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER3");
        else
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER3S");
    }
    else if (iTier == 3)
    {
        if(iRand < 2)
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER4");
        else
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER4S");
    }
    else if (iTier == 4)
    {
        uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "GATEKEEPER3");
    }
    else
    {
        if(iRand < 2)
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER5");
        else
            uUnit = CreateUnitAtMarker(rPlayerEnemy, iMarker, "RPG_ARENAMONSTER5S");
    }
    
    CreateObjectAtUnit(uUnit, "CAST_TELEPORT");
    return;
}