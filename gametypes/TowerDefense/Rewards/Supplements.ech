function int ChooseSupplementTier(int iWaveNumber)
{
    int iRoll;

    iRoll =  GaussianDistributionNoExtraEntropy(30) + 2 * iWaveNumber;
    
    if (20 > iRoll) return 0;
    if (40 > iRoll) return 1;
    if (60 > iRoll) return 2;
    if (80 > iRoll) return 3;
    if (100 > iRoll) return 4;
    if (120 > iRoll) return 5;
    return 6;
}

function unitex CreateHPSupplementReward(int iWaveNumber, int iMarker) 
{
    int iTier;
    unitex uSupplement;
    iTier = ChooseSupplementTier(iWaveNumber);
    
    if (iTier == 0)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_050");
    else if (iTier == 1)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_100");
    else if (iTier == 2)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_200");
    else if (iTier == 3)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_300");
    else if (iTier == 4)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_400");
    else if (iTier == 5)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_500");
    else
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_HP_GE_600");

    return uSupplement;
}


function unitex CreateDamageSupplementReward(int iWaveNumber, int iMarker) 
{
    int iTier;
    unitex uSupplement;
    iTier = ChooseSupplementTier(iWaveNumber);
    
    if (iTier == 0)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_005");
    else if (iTier == 1)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_010");
    else if (iTier == 2)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_020");
    else if (iTier == 3)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_040");
    else if (iTier == 4)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_080");
    else if (iTier == 5)
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_100");
    else
        uSupplement = CreateObjectAtMarker(iMarker, "ART_ADD_DAMAGE_GE_200");

    return uSupplement;
}

function unitex RewardSupplement(int iWaveNumber, int iMarker)
{
    int i;
    unitex uSupplement;

    i = RandXorNoExtraEntropy(100);

    if (i < 50)
        uSupplement = CreateDamageSupplementReward(iWaveNumber, iMarker);
    else
        uSupplement = CreateHPSupplementReward(iWaveNumber, iMarker);

    return uSupplement;
}
