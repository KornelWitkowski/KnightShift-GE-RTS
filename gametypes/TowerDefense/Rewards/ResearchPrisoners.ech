function void AddArmourResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {

    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("ARMOUR2");
    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("ARMOUR2");
        rPlayer.ResearchUpdate("ARMOUR2A");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("ARMOUR2");
        rPlayer.ResearchUpdate("ARMOUR2A");
        rPlayer.ResearchUpdate("ARMOUR3");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("ARMOUR2");
        rPlayer.ResearchUpdate("ARMOUR2A");
        rPlayer.ResearchUpdate("ARMOUR3");
        rPlayer.ResearchUpdate("ARMOUR3A");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("ARMOUR2");
        rPlayer.ResearchUpdate("ARMOUR2A");
        rPlayer.ResearchUpdate("ARMOUR3");
        rPlayer.ResearchUpdate("ARMOUR3A");
        rPlayer.ResearchUpdate("ARMOUR4");
    }
}

function void AddHelmetResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {
\
    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("HELMET1A");
    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("HELMET1A");
        rPlayer.ResearchUpdate("HELMET2");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("HELMET1A");
        rPlayer.ResearchUpdate("HELMET2");
        rPlayer.ResearchUpdate("HELMET2A");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("HELMET1A");
        rPlayer.ResearchUpdate("HELMET2");
        rPlayer.ResearchUpdate("HELMET2A");
        rPlayer.ResearchUpdate("HELMET3");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("HELMET1A");
        rPlayer.ResearchUpdate("HELMET2");
        rPlayer.ResearchUpdate("HELMET2A");
        rPlayer.ResearchUpdate("HELMET3");
        rPlayer.ResearchUpdate("HELMET4");
    }
}

function void AddSpearResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {
    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("SPEAR2");
    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("SPEAR2");
        rPlayer.ResearchUpdate("SPEAR3");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("SPEAR2");
        rPlayer.ResearchUpdate("SPEAR3");
        rPlayer.ResearchUpdate("SPEAR4");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("SPEAR2");
        rPlayer.ResearchUpdate("SPEAR3");
        rPlayer.ResearchUpdate("SPEAR4");
        rPlayer.ResearchUpdate("SPEAR5");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("SPEAR2");
        rPlayer.ResearchUpdate("SPEAR3");
        rPlayer.ResearchUpdate("SPEAR4");
        rPlayer.ResearchUpdate("SPEAR5");
        rPlayer.ResearchUpdate("SPEAR6");
    }
}

function void AddShieldResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {
    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("SHIELD1B");
    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("SHIELD1B");
        rPlayer.ResearchUpdate("SHIELD1C");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("SHIELD1B");
        rPlayer.ResearchUpdate("SHIELD1C");
        rPlayer.ResearchUpdate("SHIELD2");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("SHIELD1B");
        rPlayer.ResearchUpdate("SHIELD1C");
        rPlayer.ResearchUpdate("SHIELD2");
        rPlayer.ResearchUpdate("SHIELD2D");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("SHIELD1B");
        rPlayer.ResearchUpdate("SHIELD1C");
        rPlayer.ResearchUpdate("SHIELD2");
        rPlayer.ResearchUpdate("SHIELD2D");
        rPlayer.ResearchUpdate("SHIELD3A");
    }
}


function void AddAxeResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {
\
    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("AXE2");
    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("AXE2");
        rPlayer.ResearchUpdate("AXE3");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("AXE2");
        rPlayer.ResearchUpdate("AXE3");
        rPlayer.ResearchUpdate("AXE4");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("AXE2");
        rPlayer.ResearchUpdate("AXE3");
        rPlayer.ResearchUpdate("AXE4");
        rPlayer.ResearchUpdate("AXE5");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("AXE2");
        rPlayer.ResearchUpdate("AXE3");
        rPlayer.ResearchUpdate("AXE4");
        rPlayer.ResearchUpdate("AXE5");
        rPlayer.ResearchUpdate("AXE6");
    }
}


function void AddBowResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {
    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("BOW2");
    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("BOW2");
        rPlayer.ResearchUpdate("BOW3");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("BOW2");
        rPlayer.ResearchUpdate("BOW3");
        rPlayer.ResearchUpdate("BOW4");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("BOW2");
        rPlayer.ResearchUpdate("BOW3");
        rPlayer.ResearchUpdate("BOW4");
        rPlayer.ResearchUpdate("BOW5");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("BOW2");
        rPlayer.ResearchUpdate("BOW3");
        rPlayer.ResearchUpdate("BOW4");
        rPlayer.ResearchUpdate("BOW5");
        rPlayer.ResearchUpdate("BOW6");
    }
}


function void AddSwordResearch(player rPlayer, int iTier)
{
    if(iTier == 0)
    {
    }
    else if(iTier == 1)
    {
        rPlayer.ResearchUpdate("SWORD1A");

    }
    else if (iTier == 2)
    {
        rPlayer.ResearchUpdate("SWORD1A");
        rPlayer.ResearchUpdate("SWORD2");
    }
    else if (iTier == 3)
    {
        rPlayer.ResearchUpdate("SWORD1A");
        rPlayer.ResearchUpdate("SWORD2");
        rPlayer.ResearchUpdate("SWORD2A");
    }
    else if (iTier == 4)
    {
        rPlayer.ResearchUpdate("SWORD1A");
        rPlayer.ResearchUpdate("SWORD2");
        rPlayer.ResearchUpdate("SWORD2A");
        rPlayer.ResearchUpdate("SWORD3");
    }
    else if (iTier == 5)
    {
        rPlayer.ResearchUpdate("SWORD1A");
        rPlayer.ResearchUpdate("SWORD2");
        rPlayer.ResearchUpdate("SWORD2A");
        rPlayer.ResearchUpdate("SWORD3");
        rPlayer.ResearchUpdate("SWORD3A");
    }
}


function void AddResearch(
    player rPlayer,
    int iBow,
    int iAxe,
    int iSpear,
    int iSword,
    int iShield,
    int iHelmet,
    int iArmour
)
{
    int iBowModified, iAxeModified, iSpearModified, iSwordModified, iShieldModified;

    iBowModified = iBow;
    iAxeModified = iAxe;
    iSpearModified = iSpear;
    iSwordModified = iSword;
    iShieldModified = iShield;

    if(iDifficulty < 1)
    {
        iSpearModified = iSpear + 1;
        iSwordModified = iSword + 1;
        iShieldModified = iShield + 1;

        iSpearModified = MIN(iSpearModified, 5);
        iSwordModified = MIN(iSwordModified, 5);
        iShieldModified = MIN(iShieldModified, 5);
    }
    if(iDifficulty < 2)
    {
        iBowModified = iBow + 1;
        iAxeModified = iAxe + 1;

        iBowModified = MIN(iBowModified, 5);
        iAxeModified = MIN(iAxeModified, 5);
    }


    AddBowResearch(rPlayer, iBowModified);
    AddAxeResearch(rPlayer, iAxeModified);
    AddSpearResearch(rPlayer, iSpearModified);
    AddSwordResearch(rPlayer, iSwordModified);
    AddShieldResearch(rPlayer, iShieldModified);
    AddHelmetResearch(rPlayer, iHelmet);
    AddArmourResearch(rPlayer, iArmour);
}


function void AddResearchAfterWave(player rPlayer, int nWaveNumber)
{
    if (nWaveNumber == 1)
    {
        AddResearch(rPlayer, 0, 0, 0, 0, 0, 0, 0);
    }
    else if(nWaveNumber == 2)
    {
        AddResearch(rPlayer, 1, 0, 0, 0, 0, 0, 0);
    }
    else if(nWaveNumber == 3)
    {
        AddResearch(rPlayer, 1, 1, 0, 0, 0, 0, 0);
    }
    else if(nWaveNumber == 4)
    {
        AddResearch(rPlayer, 1, 1, 1, 0, 0, 0, 0);
    }
    else if(nWaveNumber == 5)
    {
        AddResearch(rPlayer, 1, 1, 1, 1, 0, 0, 0);
    }
    else if(nWaveNumber == 6)
    {
        AddResearch(rPlayer, 1, 1, 1, 1, 1, 0, 0);
    }
    else if(nWaveNumber == 7)
    {
        AddResearch(rPlayer, 2, 1, 1, 1, 1, 0, 0);
    }
    else if(nWaveNumber == 8)
    {
        AddResearch(rPlayer, 2, 1, 1, 1, 1, 0, 0);
    }
    else if(nWaveNumber == 9)
    {
        AddResearch(rPlayer, 2, 2, 1, 1, 1, 0, 0);
    }
    else if(nWaveNumber == 10)
    {
        AddResearch(rPlayer, 2, 2, 2, 1, 1, 0, 0);
    }
    else if(nWaveNumber == 11)
    {
        AddResearch(rPlayer, 2, 2, 2, 2, 1, 0, 0);
    }
    else if(nWaveNumber == 12)
    {
        AddResearch(rPlayer, 2, 2, 2, 2, 1, 0, 1);
    }
    else if(nWaveNumber == 13)
    {
        AddResearch(rPlayer, 2, 2, 2, 2, 1, 1, 1);
    }
    else if(nWaveNumber == 14)
    {
        AddResearch(rPlayer, 2, 2, 2, 2, 1, 1, 1);
    }
    else if(nWaveNumber == 15)
    {
        AddResearch(rPlayer, 3, 2, 2, 2, 1, 1, 1);
    }
    else if(nWaveNumber == 16)
    {
        AddResearch(rPlayer, 3, 3, 2, 2, 1, 1, 1);
    }
    else if(nWaveNumber == 17)
    {
        AddResearch(rPlayer, 3, 3, 2, 2, 1, 1, 1);
    }
    else if(nWaveNumber == 18)
    {
        AddResearch(rPlayer, 3, 3, 2, 2, 2, 1, 1);
    }
    else if(nWaveNumber == 19)
    {
        AddResearch(rPlayer, 3, 3, 2, 2, 2, 1, 2);
    }
    else if(nWaveNumber == 20)
    {
        AddResearch(rPlayer, 3, 3, 2, 2, 2, 2, 2);
    }
    else if(nWaveNumber == 21)
    {
        AddResearch(rPlayer, 3, 3, 2, 2, 2, 2, 2);
    }
    else if(nWaveNumber == 22)
    {
        AddResearch(rPlayer, 3, 3, 3, 2, 2, 2, 2);
    }
    else if(nWaveNumber == 23)
    {
        AddResearch(rPlayer, 3, 3, 3, 3, 2, 2, 2);
    }
    else if(nWaveNumber == 24)
    {
        AddResearch(rPlayer, 3, 3, 3, 3, 3, 2, 2);
    }
    else if(nWaveNumber == 25)
    {
        AddResearch(rPlayer, 4, 3, 3, 3, 3, 2, 2);
    }
    else if(nWaveNumber == 26)
    {
        AddResearch(rPlayer, 4, 4, 3, 3, 3, 2, 2);
    }
    else if(nWaveNumber == 27)
    {
        AddResearch(rPlayer, 4, 4, 3, 3, 3, 3, 2);
    }
    else if(nWaveNumber == 28)
    {
        AddResearch(rPlayer, 4, 4, 3, 3, 3, 3, 3);
    }
    else if(nWaveNumber == 29)
    {
        AddResearch(rPlayer, 4, 4, 3, 3, 3, 3, 3);
    }
    else if(nWaveNumber == 30)
    {
        AddResearch(rPlayer, 4, 4, 4, 4, 3, 3, 3);
    }
    else if(nWaveNumber == 31)
    {
        AddResearch(rPlayer, 4, 4, 4, 4, 4, 3, 3);
    }
    else if(nWaveNumber == 32)
    {
        AddResearch(rPlayer, 4, 4, 4, 4, 4, 3, 3);
    }
    else if(nWaveNumber == 33)
    {
        AddResearch(rPlayer, 4, 4, 4, 4, 4, 4, 3);
    }
    else if(nWaveNumber == 34)
    {
        AddResearch(rPlayer, 4, 4, 4, 4, 4, 4, 4);
    }
    else if(nWaveNumber == 35)
    {
        AddResearch(rPlayer, 5, 4, 4, 4, 4, 4, 4);
    }
    else if(nWaveNumber == 36)
    {
        AddResearch(rPlayer, 5, 5, 4, 4, 4, 4, 4);
    }
    else if(nWaveNumber == 37)
    {
        AddResearch(rPlayer, 5, 5, 5, 4, 4, 4, 4);
    }
    else if(nWaveNumber == 38)
    {
        AddResearch(rPlayer, 5, 5, 5, 5, 4, 4, 4);
    }
    else if(nWaveNumber == 39)
    {
        AddResearch(rPlayer, 5, 5, 5, 5, 5, 4, 4);
    }
    else if(nWaveNumber == 40)
    {
        AddResearch(rPlayer, 5, 5, 5, 5, 5, 5, 4);
    }
    else if(nWaveNumber == 41)
    {
        AddResearch(rPlayer, 5, 5, 5, 5, 5, 5, 5);
    }
    else if(nWaveNumber == 42)
    {
        AddResearch(rPlayer, 5, 5, 5, 5, 5, 5, 5);
    }
    else
    {
        AddResearch(rPlayer, 5, 5, 5, 5, 5, 5, 5);
    }
}
