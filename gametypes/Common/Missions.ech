unitex uJanosik;

function void InitializeCommunityGE01()
{
    uJanosik = GetUnit(GetPointX(18), GetPointY(18), GetPointZ(18));
}

function void InitializeCommunityGE02()
{
    int i, j;
    int iNumberOfUnits;
    player rPlayer, rPlayer1, rPlayer2;
    unitex uUnit, uTalkerSmoke;

    // buffy dla jednostek graczy niezależnych
    for(i=10; i<15; ++i)
    {
        rPlayer = GetPlayer(i);
        if(i==13) continue;
        rPlayer.ResearchUpdate("AUTOSPELL_PRIEST5");
        rPlayer.ResearchUpdate("AUTOSPELL_FIREBALL5");
        rPlayer.ResearchUpdate("AUTOSPELL_WITCH5");

        iNumberOfUnits = rPlayer.GetNumberOfUnits();
        for(j=0; j<iNumberOfUnits; j=j+1)
        {
            uUnit = rPlayer.GetUnit(j);
            if(uUnit.IsHarvester()) continue;

            uUnit.EnableCapture(false);
            uUnit.EnableConversionByMagic(false);
            uUnit.EnableConversionByPlace(false);

            if(uUnit.IsInTower())
            {
                uUnit.AddHP(400);
                uUnit.SetExperienceLevel(12);
                ImproveHPRegeneration(uUnit, 5);
                uUnit.RegenerateMagic();
                uUnit.RegenerateHP();
                uUnit.AddDamage(0, 25);
                uUnit.AddDamage(1, 25);
                uUnit.AddDamage(2, 25);
            }
            else
            {
                ImproveHPRegeneration(uUnit, 10);
            }
        }
    }

    for(i=8; i<15; i=i+1)
    {
        rPlayer1 = GetPlayer(i);
        if(rPlayer1==null)
            continue; 

        for(j=i+1; j<15; j=j+1)
        {
            rPlayer2 = GetPlayer(j);

            if(rPlayer2==null)
                continue; 
            rPlayer1.SetNeutral(rPlayer2);
            rPlayer2.SetNeutral(rPlayer1);
        }
    }

    for(i=0; i<6; i=i+1)
    {
        uUnit = GetUnitAtMarker(10 + i);
        rPlayer1 = GetPlayer(i);
        if(rPlayer1 != null)
        {
            uUnit.ChangePlayer(rPlayer1);  
        }
    }

    // tytan do zabicia w podziemiach
    uUnit = GetUnitAtMarker(20);
    uUnit.AddHP(-3000);

    // tytan do wzięcia z podziemi
    uUnit = GetUnitAtMarker(21);
    uUnit.AddHP(-3000);
}
 
 function void InititializeMissionScripts()
 {
    if(!CompareStringsNoCase(GetLevelName(), "COMMUNITY_GE_01"))
    {
        InitializeCommunityGE01();
    }
    else if(!CompareStringsNoCase(GetLevelName(), "COMMUNITY_GE_02"))
    {
        InitializeCommunityGE02();
    }
 }


int bDemonGateOpened;
unitex uMedusaWitch;

function void TimerCommunityGE01(int iMarkerGate, int iMarkerButtonLast)
{

}

function void TimerCommunityGE02(int iMarkerGate, int iMarkerButtonLast)
{
    int i;
    int iMarker;
    int iDistance;
    int iNumberOfButtons;
    int bAllUnitsOnButton;
    unit uAttacker;
    unitex uUnit, uGate;
    int iMarkerButtonFirst;

    // Demon w podziemiach do wzięcia za ustawienie 4 krów na guzikach.
    if(!PointExist(iMarkerGate))
        return;

    uGate = GetUnit(GetPointX(iMarkerGate), GetPointY(iMarkerGate), GetPointZ(iMarkerGate));

    if(uGate == null)
        return;

    bAllUnitsOnButton = true;
    iMarkerButtonFirst = iMarkerGate + 1;

    for(i=iMarkerButtonFirst; i<=iMarkerButtonLast; ++i)
    {
        iMarker = i;
        if(!PointExist(iMarker))
            continue;
        
        uUnit = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
        if(uUnit==null || !uUnit.IsHarvester())
        {
            bAllUnitsOnButton = false;
            break;
        }
    }

    if(bAllUnitsOnButton || bDemonGateOpened)
    {
        uGate.CommandBuildingSetGateMode(modeGateOpened);

        // Poświecamy krowy na guzikach. If sprawia, że ofiara jest jednorazowa
        if(!bDemonGateOpened)
        {
            iMarkerButtonFirst = iMarkerGate + 1;
            for(i=iMarkerButtonFirst; i<=iMarkerButtonLast; ++i)
            {
                uUnit = GetUnit(GetPointX(i), GetPointY(i), GetPointZ(i));
                uUnit.KillUnit();
            }
        }
        bDemonGateOpened = true;
    }
    else
    {
        uGate.CommandBuildingSetGateMode(modeGateClosed);
    }

    // Spacerująca wiedźma.

    if(uMedusaWitch == null)
        uMedusaWitch = GetUnit(GetPointX(600), GetPointY(600), GetPointZ(600));

    if(uMedusaWitch == null)
        return;

    uAttacker = uMedusaWitch.GetAttacker();

    if(uAttacker != null)
    {
        uUnit = GetUnit(uAttacker.GetLocationX(), uAttacker.GetLocationY(), uAttacker.GetLocationZ());
        uMedusaWitch.CommandAttack(uUnit);
        return;
    }
        

    if(RAND(1000) > 30)
        return;

    i = RAND(10);

    iDistance = uMedusaWitch.DistanceTo(GetPointX(30+i), GetPointY(30+i));

    if(iDistance > 10)
    {
        uMedusaWitch.CommandMove(GetPointX(30+i), GetPointY(30+i), GetPointZ(30+i));
    }
}


function void MakeMissionPeriodicEvents()
{
    if(!CompareStringsNoCase(GetLevelName(), "COMMUNITY_GE_01"))
    {

    }
    else if(!CompareStringsNoCase(GetLevelName(), "COMMUNITY_GE_02"))
    {
        TimerCommunityGE02(95, 99);
    }

}

function void UnitDestroyedCommunityGE01(unitex uKilledUnit)
{
    int i;
    unitex uUnit;
    player rPlayer;

    rPlayer = GetPlayer(14);

    if(uKilledUnit == null)
        return;

    if(uKilledUnit == uJanosik)
    {

        for(i = 10; i <= 13; ++i)
        {
            uUnit = GetUnit(GetPointX(i), GetPointY(i), GetPointZ(i));
            CreateObjectAtUnit(uUnit, "CAST_TELEPORT");
            uUnit.KillUnit();
            uUnit = CreateUnitAtMarker(rPlayer, i, "STONE_FOOTMAN");
            uUnit.AddDamage(0, 15);
            uUnit.AddDamage(1, 15);
            uUnit.AddDamage(2, 15);
            uUnit.AddHP(200);
            uUnit.SetExperienceLevel(6);
        }

        for(i = 14; i <= 17; ++i)
        {
            uUnit = GetUnit(GetPointX(i), GetPointY(i), GetPointZ(i));
            CreateObjectAtUnit(uUnit, "CAST_TELEPORT");
            uUnit.KillUnit();
            uUnit = CreateUnitAtMarker(rPlayer, i, "STONE_HUNTER");
            uUnit.AddDamage(0, 15);
            uUnit.AddDamage(1, 15);
            uUnit.AddDamage(2, 15);
            uUnit.AddHP(200);
            uUnit.SetExperienceLevel(6);
        }
    }
}


function void UnitDestroyedCommunityGE02(unitex uUnit)
{


}


function void MakeMissionUnitDestroyedEvents(unitex uUnit)
{
    if(!CompareStringsNoCase(GetLevelName(), "COMMUNITY_GE_01"))
    {
        UnitDestroyedCommunityGE01(uUnit);
    }
    else if(!CompareStringsNoCase(GetLevelName(), "COMMUNITY_GE_02"))
    {
        UnitDestroyedCommunityGE02(uUnit);
    }
}