/*
    Gatekeepers protect a certain gate - if the gatekeepers are defeated then the gate is being opened
*/

unitex uGateKeeper00, uGateKeeper01, uGateKeeper02, uGateKeeper03;
unitex uGateKeeper10, uGateKeeper11, uGateKeeper12, uGateKeeper13;
unitex uGateKeeper20, uGateKeeper21;
unitex uGateKeeper30, uGateKeeper31;
unitex uGateKeeper40;
unitex uGateKeeper50;

function void OpenIfGateKeepersDestroyed(int iMarkerGate, unitex uUnit0,
                    unitex uUnit1, unitex uUnit2, unitex uUnit3)
{
    unitex uGate;

    if(!PointExist(iMarkerGate))
        return;

    uGate = GetUnit(GetPointX(iMarkerGate), GetPointY(iMarkerGate), GetPointZ(iMarkerGate));

    if(uGate == null)
        return;

    if(IsAlive(uUnit0) || IsAlive(uUnit1) || IsAlive(uUnit2) || IsAlive(uUnit3))
        uGate.CommandBuildingSetGateMode(modeGateClosed);
    else
        uGate.CommandBuildingSetGateMode(modeGateOpened);
}

function void AssignGateKeepers0(int iMarkerGate)
{
    int iMarker;
    iMarker = iMarkerGate + 1;
    if(PointExist(iMarker))
       uGateKeeper00 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper01 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper02 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper03 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
}

function void AssignGateKeepers1(int iMarkerGate)
{
    int iMarker;
    iMarker = iMarkerGate + 1;
    if(PointExist(iMarker))
       uGateKeeper10 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper11 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper12 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper13 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
}

function void AssignGateKeepers2(int iMarkerGate)
{
    int iMarker;
    iMarker = iMarkerGate + 1;
    if(PointExist(iMarker))
       uGateKeeper20 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper21 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
}

function void AssignGateKeepers3(int iMarkerGate)
{
    int iMarker;
    iMarker = iMarkerGate + 1;
    if(PointExist(iMarker))
       uGateKeeper30 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));

    iMarker = iMarker + 1;
    if(PointExist(iMarker))
       uGateKeeper31 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
}

function void AssignGateKeepers4(int iMarkerGate)
{
    int iMarker;
    iMarker = iMarkerGate + 1;
    if(PointExist(iMarker))
       uGateKeeper40 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
}

function void AssignGateKeepers5(int iMarkerGate)
{
    int iMarker;
    iMarker = iMarkerGate + 1;
    if(PointExist(iMarker))
       uGateKeeper50 = GetUnit(GetPointX(iMarker), GetPointY(iMarker), GetPointZ(iMarker));
}


function void CheckGateKeepers(int iMarkerStart)
{
    OpenIfGateKeepersDestroyed(iMarkerStart,    uGateKeeper00, uGateKeeper01, uGateKeeper02, uGateKeeper03);
    OpenIfGateKeepersDestroyed(iMarkerStart+5,  uGateKeeper10, uGateKeeper11, uGateKeeper12, uGateKeeper13);
    OpenIfGateKeepersDestroyed(iMarkerStart+10, uGateKeeper20, uGateKeeper21, null, null);
    OpenIfGateKeepersDestroyed(iMarkerStart+13, uGateKeeper30, uGateKeeper31, null, null);
    OpenIfGateKeepersDestroyed(iMarkerStart+16, uGateKeeper40, null, null, null);
    OpenIfGateKeepersDestroyed(iMarkerStart+18, uGateKeeper50, null, null, null);
}

function void InitializeGateKeepers(int iMarkerStart)
{
    AssignGateKeepers0(iMarkerStart);
    AssignGateKeepers1(iMarkerStart+5);
    AssignGateKeepers2(iMarkerStart+10);
    AssignGateKeepers3(iMarkerStart+13);
    AssignGateKeepers4(iMarkerStart+16);
    AssignGateKeepers5(iMarkerStart+18);
}
