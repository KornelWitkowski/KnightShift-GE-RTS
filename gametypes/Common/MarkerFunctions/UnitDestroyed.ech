function int CheckWinLoseUnits(unitex uUnitKilled)
{
    int j;
    int iScriptData;
    player rPlayer, rPlayerAttacker;
    unit uAttacker;
    iScriptData = uUnitKilled.GetScriptData();

    if((iScriptData & SCRIPT_DATA_LOSE_WHEN_KILLED) != 0)
    {
        rPlayer = GetPlayer(uUnitKilled.GetIFFNumber());
        rPlayer.SetScriptData(1, 1);

        KillArea(rPlayer.GetIFF(), GetRight()/2, GetBottom()/2, 0, 128);
        KillArea(rPlayer.GetIFF(), GetRight()/2, GetBottom()/2, 1, 128);

        SetStateDelay(150);
        state Defeat;
    }
    else if(iScriptData & SCRIPT_DATA_WIN_WHEN_KILLED != 0)
    {
        SetStateDelay(150);
        state Victory;
    }
    else
    {
        return false;
    }

    return true;
}

function int CheckUnitDestoyedTraps(unitex uUnitKilled)
{
    /*
        Wywołuje pułapki i inne eventy po pokonaniu jednostki.

        returns: `true` jeśli został wywołany jakiś event, `false` w przeciwnim wypadku.
    */

    int i, j, n;
    int iX, iY, iZ, iAlpha;
    int iScriptData;
    int iTrapScriptData;
    unit uAttacker;
    unitex uAttackerEx;
    unitex uTemp;
    player rPlayer;
    rPlayer = GetPlayer(14);

    // pułapki mogą być umieszczone tylko na unitach graczy niezależnych
    if(uUnitKilled.GetIFFNumber() <= 7)
        return false;

    // teściowe przejmujące budynki są oznaczone jako killed
    if(uUnitKilled.IsInBuilding())
        return false;

    iX = uUnitKilled.GetLocationX();
    iY = uUnitKilled.GetLocationY();
    iZ = uUnitKilled.GetLocationZ();
    iAlpha = uUnitKilled.GetAlphaAngle();

    iScriptData = uUnitKilled.GetScriptData();
    uAttacker = uUnitKilled.GetAttacker();
    uAttackerEx = GetUnit(uAttacker.GetLocationX(),
                          uAttacker.GetLocationY(),
                          uAttacker.GetLocationZ());

    // Odzyskujemy informacje o pułapkach
    iTrapScriptData = iScriptData & MASK_SCRIPT_DATA_TRAP;

    if(iTrapScriptData == SCRIPT_DATA_TRAP_5_SKELETON_TIER_1)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON1", 5, 0);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_5_SKELETON_TIER_2)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON2", 5, 0);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_5_SKELETON_TIER_3)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON3", 5, 0);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_5_SKELETON_TIER_4)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON4", 5, 0);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_1)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON1", 2, SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_1);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_2)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON2", 2, SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_2);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_3)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON3", 2, SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_3);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_4)
        CreateUnitsNearKilledUnit(uUnitKilled, "SKELETON4", 2, SCRIPT_DATA_TRAP_HYDRA_SKELETON_TIER_4);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_DEMON_1)
        CreateUnitsNearKilledUnit(uUnitKilled, "RPG_ARENAMONSTER1", 1, 0);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_DEMON_2)
        CreateUnitsNearKilledUnit(uUnitKilled, "RPG_ARENAMONSTER1S", 1, 0);
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_POISON_ATTACKER)
    {
        CreateObjectAtUnit(uAttackerEx, "POISONTRAP4");
    }
    else if(iTrapScriptData == SCRIPT_DATA_TRAP_POISON)
    {
        // sztuczka magika - w miejsce pokonanego unita dajemy krasnoludka, żeby zdetonował bombę
        uTemp = rPlayer.CreateUnit(iX, iY, iZ, 0, "DWARF_WOODCUTTER_1");
        uTemp.AddHP(-uTemp.GetMaxHP()+1);
        CreateObjectAtUnit(uTemp, "POISONTRAP4");
    } 
    else
        return false;

    return true;
}

function void CheckUnitDestroyedFunctional(unitex uUnitKilled)
{
    int iScriptData, iFunctionalScriptData;
    int iX, iY, iZ, iAlpha;
    unit uAttacker;
    player rPlayerAttacker;

    iX = uUnitKilled.GetLocationX();
    iY = uUnitKilled.GetLocationY();
    iZ = uUnitKilled.GetLocationZ();
    iAlpha = uUnitKilled.GetAlphaAngle();
    uAttacker = uUnitKilled.GetAttacker();
    iScriptData = uAttacker.GetScriptData();

    rPlayerAttacker = GetPlayer(uAttacker.GetIFFNumber());

    if(iScriptData & SCRIPT_DATA_NECROMANCER != 0)
    {
        ResurrectUnit(iX, iY, iZ, iAlpha, uUnitKilled, rPlayerAttacker);
    }  
    else
    {
        ResurrectUnitIfInNecromanyField(uUnitKilled);
    }
}

function void CheckMarkeredUnitDestroyedEvents(unitex uUnitKilled)
{
    int bEventOccured;
    bEventOccured = CheckWinLoseUnits(uUnitKilled);

    if(bEventOccured)
        return;

    bEventOccured = CheckUnitDestoyedTraps(uUnitKilled);

    if(bEventOccured)
        return;

    CheckUnitDestroyedFunctional(uUnitKilled);
}
